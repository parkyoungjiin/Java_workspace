package polymorphism;

public class Test {

	public static void main(String[] args) {

	
	스마트폰 내폰 = new 스마트폰(); //
	내폰.전화();
	내폰.문자();
	내폰.카톡();
	
	//슈퍼클래스 타입(핸드폰) 인스턴스 생성
	
	핸드폰 어머니폰 = new 핸드폰();
	
	어머니폰.문자();
	어머니폰.전화();
	
	
	
	
	//내가 쓰던 폰을 어머니께 드릴 경우
	// = 스마트폰(서브) -> 핸드폰(슈퍼) 타입으로 변환하는 경우
	
	어머니폰 = 내폰; // 서브 = 슈퍼 
	//엄마는 기능을 2개만 사용 가능, 내폰은 기능 3개만 사용 가능
	어머니폰.전화(); //자동 형변환
	// 엄마는 전화, 문자만 사용하다가 스마트폰을 핸드폰 타입으로 참조할 경우 기능이 축소된다.
	
	//또 다른 동생폰을 어머니께 드릴 경우
	// = 스마트폰(서브) -> 핸드폰(슈퍼)
	
	스마트폰 동생폰 = new 스마트폰();
	어머니폰 = 동생폰;
	어머니폰.전화();
	어머니폰.문자();
	
	System.out.println("-------------------");
	
	어머니폰 = new 스마트폰(); // 업캐스팅 (자식의 값을 부모에게)
	
	내폰 = (스마트폰)어머니폰; //핸드폰 타입 -> 스마트폰 다운캐스팅 ( 오류 발생, type dismatch이 발생하기에 강제형변환 필수)
	
	
	}

}
class 전화기 {
	public void 전화() {
		System.out.println("전화 걸기!");
	}
}

class 핸드폰 extends 전화기 {
	public void 문자() {
		System.out.println("문자 전송!");
	}
}

class 스마트폰 extends 핸드폰 {
	public void 카톡() {
		System.out.println("카톡 전송!");
	}
}